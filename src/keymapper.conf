# In case of emergency: Shift+Escape+K to terminate keymapperd
# 

# sudo systemctl stop keymapperd
# sudo systemctl start keymapperd

# Print info about the next key pressed
# keymapperctl --next-key-info
# keymapperctl --is-pressed T

#ButtonBack >> Control{W}K
#ButtonForward >> (Control Shift){T}

# [system = "Linux", class = "code"]





# sudo keymapperd -v
# keymapper -v -u


### Classes
BRAVE="brave-browser"
VSCODE="code"

### Modes
GAMER_MODE=Virtual4
BOSS_MODE=Virtual47
WM_MODE=Virtual5
TEXT_MODE=Virtual6
TEXT_PROMPT_MODE=Virtual8
VSCODE_BREADCRUMB_MODE=Virtual7

GRAB = (AltLeft Shift Control)


enter_text_mode = TEXT_MODE !GAMER_MODE 
exit_text_mode = GAMER_MODE !TEXT_MODE 
enter_boss_mode = BOSS_MODE !GAMER_MODE
exit_boss_mode = GAMER_MODE !BOSS_MODE

@allow-unmapped-commands
@enforce-lowercase-commands


@include "text_expansion.conf"



# immediately forward common modifier keys (also used as mouse modifiers)
# without this Shift{A} will block Shift 



Shift   >> Shift
Control >> Control
AltLeft >> AltLeft
MetaLeft >> MetaLeft




# Mouse
WheelLeft >> Control{PageUp}
WheelRight >> Control{PageDown}
ButtonBack >> Control{W}
ButtonForward >> Control{Shift{T}}




# mkfifo /tmp/gamer_message_pipe
PIPE_FILE = /tmp/gamer_message_pipe
init_pipe = $([ ! -p "${PIPE_FILE}" ] && mkfifo "${PIPE_FILE}")

pipe = $([ -p "${PIPE_FILE}" ] && echo $0 > ${PIPE_FILE} &)
pipe_enter = pipe["ENTER" $0]
pipe_exit = pipe["EXIT" $0]
pipe_enter_exit = ContextActive >> pipe_enter[$0] ^ pipe_exit[$0]
pipe_key_down = pipe["KEY_DOWN" $0]
pipe_key_up = pipe["KEY_UP" $0]
pipe_key_down_up = pipe_key_down[$0] ^ pipe_key_up[$0]
command = pipe["COMMAND" $0]


[default]
# startup, NOTE: always init_pipe before using it, or else a normal file will be created that behaves differently from a fifo pipe.
# delay after init_pipe is needed so the following pipe message don't try to send data to a non-existing pipe(and thus creating a normal file)
ContextActive >> init_pipe 100ms command["RELOAD_GAMEOVER"] 400ms GAMER_MODE ^ pipe["EXIT"]
MetaLeft{F5} >> command["RELOAD_GAMEOVER"]

MetaLeft{B} >> BOSS_MODE

# ------ BOSS_MODE ------
[modifier = "BOSS_MODE"]
ContextActive >> pipe_enter[_BOSS_MODE] ^ pipe_exit[_BOSS_MODE] pipe_enter[_GAMER_MODE]
Any >> Any


# ------ VSCODE_BREADCRUMB_MODE ------
[modifier = "VSCODE_BREADCRUMB_MODE"]
Enter >> Enter !VSCODE_BREADCRUMB_MODE
Escape >> Escape !VSCODE_BREADCRUMB_MODE

# ------ VSCODE ------
[class=VSCODE modifier = "GAMER_MODE"]
ContextActive >> ^ !VSCODE_BREADCRUMB_MODE
U >> Control{Shift{Period}} VSCODE_BREADCRUMB_MODE
R >> F2 TEXT_PROMPT_MODE !GAMER_MODE

# expand selection
# go to line
# go to symbol
# go to next / prev symbol highlight 
# rename symbol
# find
# go to bracket
# select to bracket
# chat next code block
# chat prev code block


# ------ TEXT_PROMPT_MODE ------
[modifier = "TEXT_PROMPT_MODE"]
pipe_enter_exit["_TEXT_PROMPT_MODE"]
exit_text_mode = GAMER_MODE !WM_MODE !TEXT_PROMPT_MODE
Shift{Enter} >> Shift{Enter}
Enter >> Enter exit_text_mode
Escape >> Escape exit_text_mode
Any >> Any


# ------ TEXT_MODE ------
[modifier = "TEXT_MODE"]
pipe_enter_exit["_TEXT_MODE"]
Shift{Enter} >> exit_text_mode
Enter >> Enter
Escape >> exit_text_mode
Any >> Any





# ------ WM_MODE ------
[modifier = "WM_MODE"]
pipe_enter_exit["_WM_MODE"]

Escape >> Escape !WM_MODE GAMER_MODE

F5 >> command["WM_RELOAD"]

GRAB >> GRAB

GRAB{I} >> command["WM_SHIFT_UP"]
GRAB{J} >> command["WM_SHIFT_LEFT"]
GRAB{K} >> command["WM_SHIFT_DOWN"]
GRAB{L} >> command["WM_SHIFT_RIGHT"]

Shift{I} >> command["WM_RESIZE_UP"]
Shift{J} >> command["WM_RESIZE_LEFT"]
Shift{K} >> command["WM_RESIZE_DOWN"]
Shift{L} >> command["WM_RESIZE_RIGHT"]

I >> command["WM_FOCUS_UP"]
J >> command["WM_FOCUS_LEFT"]
K >> command["WM_FOCUS_DOWN"]
L >> command["WM_FOCUS_RIGHT"]


# Close
Q >> command["WM_CLOSE_WINDOW"]
# App launcher
E >> command["WM_LAUNCH"] !GAMER_MODE TEXT_PROMPT_MODE !WM_MODE
R >> command["WM_LAUNCH"] !GAMER_MODE TEXT_PROMPT_MODE !WM_MODE
# Terminal
T >> command["WM_LAUNCH_TERMINAL"]

F >> command["WM_FLOAT_TOGGLE"]
G >> command["WM_FULLSCREEN_TOGGLE"]

# Split frame
D >> command["WM_SPLIT"]
A >> command["WM_REMOVE"]

Digit2 >> command["WM_QUIT"]
# Remove frame


GRAB{Digit6} >> command["WM_MOVE_TO_WORKSPACE workspace_id=1"]
GRAB{Digit7} >> command["WM_MOVE_TO_WORKSPACE workspace_id=2"]
GRAB{Digit8} >> command["WM_MOVE_TO_WORKSPACE workspace_id=3"]
GRAB{Digit9} >> command["WM_MOVE_TO_WORKSPACE workspace_id=4"]
GRAB{Digit0} >> command["WM_MOVE_TO_WORKSPACE workspace_id=5"]


Digit6 >> command["WM_GOTO_WORKSPACE workspace_id=1"]
Digit7 >> command["WM_GOTO_WORKSPACE workspace_id=2"]
Digit8 >> command["WM_GOTO_WORKSPACE workspace_id=3"]
Digit9 >> command["WM_GOTO_WORKSPACE workspace_id=4"]
Digit0 >> command["WM_GOTO_WORKSPACE workspace_id=5"]


# ------ GAMER_MODE ------
[modifier = "GAMER_MODE"]
pipe_enter_exit["_GAMER_MODE"]

W >> WM_MODE ^ !WM_MODE pipe_enter["_GAMER_MODE"]
Enter >> enter_text_mode
MetaLeft{B} >> enter_boss_mode ^
H >> command["WM_FOCUS_PREVIOUS"]



J >> Control{ArrowLeft}
L >> Control{ArrowRight}
I >> ArrowUp
K >> ArrowDown


# common themes
# movement
    # movement focus
    # movement grab / shift
    # movement highlight
# open / close
    # open / new with typing
        # launcher
    # open / new defualt
        # new tab
        # new console
    # close
    # reopen
# reload / refresh
# cut copy paste
# undo redo
# jump to previous
# search replace

# typing mode
